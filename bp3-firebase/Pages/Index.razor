@page "/"
@implements IDisposable
@inject IJSRuntime JS

<PageTitle>Home</PageTitle>

<h1>Welcome</h1>

@if (_loading)
{
    <p>Loading...</p>
}
else
{
    @if (_username.Length < 1)
    {
        <button @onclick="SignIn" class="btn btn-primary">Sign in with Google</button>
    }
    else
    {
        <p>Signed in as @_username</p>
        <button class="btn btn-success">Start quiz</button>
    }
}

@code
{
    private string _username = "";
    private bool _loading = true;
    private DotNetObjectReference<Index> dotNetHelper;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            dotNetHelper = DotNetObjectReference.Create(this);
            await JS.InvokeVoidAsync("setDotNetHelper",
                dotNetHelper);
        }
    }

    [JSInvokable]
    public void SetUsername(string value)
    {
        _username = value;
        _loading = false;
        StateHasChanged();
    }

    private async Task SignIn()
    {
        _username = new string(await JS.InvokeAsync<string>("signIn"));
    }

    public void Dispose()
    {
        dotNetHelper?.Dispose();
    }
}